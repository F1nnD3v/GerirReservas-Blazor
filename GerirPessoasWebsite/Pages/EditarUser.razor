@page "/editarUser/{id:int}"

@using System.Net.Http;
@using System.Net.Http.Headers;
@using AutoMapper
@using static System.Net.WebRequestMethods;

<h3>Editar User</h3>

@if(pessoa == null){
    <p>A carregar dados...</p>
}else{
    <div class="form-group">
        <label for="nome">Nome:</label>
        <input class="form-control" id="nome" value="@nome.Trim()" @oninput="((e) => { nome=e.Value.ToString();})"/>
    </div>
    <div class="form-group">
        <label for="idade">Idade:</label>
        <input class="form-control" id="idade" value="@idade" @oninput="((e) => { idade=Convert.ToInt32(e.Value);})"/>
    </div>
    <div class="form-group">
        <label for="email">E-mail:</label>
        <input class="form-control" id="email" value="@email.Trim()" @oninput="((e) => { email=e.Value.ToString();})"/>
    </div>
    <div class="form-group">
        <label for="telefone">Telefone:</label>
        <input class="form-control" id="telefone" value="@telefone.Trim()" @oninput="((e) => { telefone=e.Value.ToString();})"/>
    </div>
        <button type="button" class="btn btn-primary" @onclick="() => Modal.Open(id, nome, idade, email, telefone)"><span class="oi oi-check" data-glyph="check"></span></button>

        <GerirPessoasWebsite.Components.ModalEditar @ref="Modal"></GerirPessoasWebsite.Components.ModalEditar>
}


@code {
    private GerirPessoasWebsite.Components.ModalEditar Modal { get; set; }

    [Parameter]
    public int id { get; set; }
    public string nome { get; set; }
    public int idade { get; set; }
    public string email { get; set; }
    public string telefone { get; set; }
    public Pessoa pessoa { get; set; }
    public string Erro { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var client = new HttpClient();
            client.BaseAddress = new Uri("https://localhost:44360/");
            HttpResponseMessage response = await client.GetAsync("ListarPessoa/" + id);

            if (response.IsSuccessStatusCode)
            {
                pessoa = await response.Content.ReadFromJsonAsync<Pessoa>();
                id = pessoa.id;
                nome = pessoa.nome;
                idade = pessoa.idade;
                telefone = pessoa.telefone;
                email = pessoa.email;
                Console.WriteLine("Dados carregados!");
            }
            else
            {
                Console.WriteLine("Erro ao carregar dados!");
            }
        }
        catch (Exception ex)
        {
            Erro = ex.Message;
            Console.WriteLine("Erro: " + Erro);
        }
    }

}